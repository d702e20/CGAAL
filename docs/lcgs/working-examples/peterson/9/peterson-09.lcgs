// Peterson with 9 processes using filter algorithm
const n = 9;

label p0_in_cs = p0.level == (n-1);

label mutual_exclusion = (p0.level == (n-1)) +
                            (p1.level == (n-1)) +
                            (p2.level == (n-1)) +
                            (p3.level == (n-1)) +
                            (p4.level == (n-1)) +
                            (p5.level == (n-1)) +
                            (p6.level == (n-1)) +
                            (p7.level == (n-1)) +
                            (p8.level == (n-1)) <= 1;

label multiple_in_cs = ((p0.level == n-1) +
                        (p1.level == n-1) +
                        (p2.level == n-1) +
                        (p3.level == n-1) +
                        (p4.level == n-1) +
                        (p5.level == n-1) +
                        (p6.level == n-1) +
                        (p7.level == n-1) +
                        (p8.level == n-1)) > 1;

player p0 = process [id=0, other = p1, other1 = p2, other2 = p3, other3 = p4, other4 = p5, other5 = p6, other6 = p7, other7 = p8];
player p1 = process [id=1, other = p0, other1 = p2, other2 = p3, other3 = p4, other4 = p5, other5 = p6, other6 = p7, other7 = p8];
player p2 = process [id=2, other = p0, other1 = p1, other2 = p3, other3 = p4, other4 = p5, other5 = p6, other6 = p7, other7 = p8];
player p3 = process [id=3, other = p0, other1 = p1, other2 = p2, other3 = p4, other4 = p5, other5 = p6, other6 = p7, other7 = p8];
player p4 = process [id=4, other = p0, other1 = p1, other2 = p2, other3 = p3, other4 = p5, other5 = p6, other6 = p7, other7 = p8];
player p5 = process [id=5, other = p0, other1 = p1, other2 = p2, other3 = p3, other4 = p4, other5 = p6, other6 = p7, other7 = p8];
player p6 = process [id=6, other = p0, other1 = p1, other2 = p2, other3 = p3, other4 = p4, other5 = p5, other6 = p7, other7 = p8];
player p7 = process [id=7, other = p0, other1 = p1, other2 = p2, other3 = p3, other4 = p4, other5 = p5, other6 = p6, other7 = p8];
player p8 = process [id=8, other = p0, other1 = p1, other2 = p2, other3 = p3, other4 = p4, other5 = p5, other6 = p6, other7 = p7];

last_to_enter_0 : [-1 .. n-1] init -1;
last_to_enter_0' = p0.proceed_to_level_0 ? 0 :
                    (p1.proceed_to_level_0 ? 1 :
                    (p2.proceed_to_level_0 ? 2 :
                    (p3.proceed_to_level_0 ? 3 :
                    (p4.proceed_to_level_0 ? 4 :
                    (p5.proceed_to_level_0 ? 5 :
                    (p6.proceed_to_level_0 ? 6 :
                    (p7.proceed_to_level_0 ? 7 :
                    (p8.proceed_to_level_0 ? 8 : last_to_enter_0))))))));

last_to_enter_1 : [-1 .. n-1] init -1;
last_to_enter_1' = p0.proceed_to_level_1 ? 0 :
                    (p1.proceed_to_level_1 ? 1 :
                    (p2.proceed_to_level_1 ? 2 :
                    (p3.proceed_to_level_1 ? 3 :
                    (p4.proceed_to_level_1 ? 4 :
                    (p5.proceed_to_level_1 ? 5 :
                    (p6.proceed_to_level_1 ? 6 :
                    (p7.proceed_to_level_1 ? 7 :
                    (p8.proceed_to_level_1 ? 8 : last_to_enter_1))))))));

last_to_enter_2 : [-1 .. n-1] init -1;
last_to_enter_2' = p0.proceed_to_level_2 ? 0 :
                    (p1.proceed_to_level_2 ? 1 :
                    (p2.proceed_to_level_2 ? 2 :
                    (p3.proceed_to_level_2 ? 3 :
                    (p4.proceed_to_level_2 ? 4 :
                    (p5.proceed_to_level_2 ? 5 :
                    (p6.proceed_to_level_2 ? 6 :
                    (p7.proceed_to_level_2 ? 7 :
                    (p8.proceed_to_level_2 ? 8 : last_to_enter_2))))))));

last_to_enter_3 : [-1 .. n-1] init -1;
last_to_enter_3' = p0.proceed_to_level_3 ? 0 :
                    (p1.proceed_to_level_3 ? 1 :
                    (p2.proceed_to_level_3 ? 2 :
                    (p3.proceed_to_level_3 ? 3 :
                    (p4.proceed_to_level_3 ? 4 :
                    (p5.proceed_to_level_3 ? 5 :
                    (p6.proceed_to_level_3 ? 6 :
                    (p7.proceed_to_level_3 ? 7 :
                    (p8.proceed_to_level_3 ? 8 : last_to_enter_3))))))));

last_to_enter_4 : [-1 .. n-1] init -1;
last_to_enter_4' = p0.proceed_to_level_4 ? 0 :
                    (p1.proceed_to_level_4 ? 1 :
                    (p2.proceed_to_level_4 ? 2 :
                    (p3.proceed_to_level_4 ? 3 :
                    (p4.proceed_to_level_4 ? 4 :
                    (p5.proceed_to_level_4 ? 5 :
                    (p6.proceed_to_level_4 ? 6 :
                    (p7.proceed_to_level_4 ? 7 :
                    (p8.proceed_to_level_4 ? 8 : last_to_enter_4))))))));

last_to_enter_5 : [-1 .. n-1] init -1;
last_to_enter_5' = p0.proceed_to_level_5 ? 0 :
                    (p1.proceed_to_level_5 ? 1 :
                    (p2.proceed_to_level_5 ? 2 :
                    (p3.proceed_to_level_5 ? 3 :
                    (p4.proceed_to_level_5 ? 4 :
                    (p5.proceed_to_level_5 ? 5 :
                    (p6.proceed_to_level_5 ? 6 :
                    (p7.proceed_to_level_5 ? 7 :
                    (p8.proceed_to_level_5 ? 8 : last_to_enter_5))))))));

last_to_enter_6 : [-1 .. n-1] init -1;
last_to_enter_6' = p0.proceed_to_level_6 ? 0 :
                    (p1.proceed_to_level_6 ? 1 :
                    (p2.proceed_to_level_6 ? 2 :
                    (p3.proceed_to_level_6 ? 3 :
                    (p4.proceed_to_level_6 ? 4 :
                    (p5.proceed_to_level_6 ? 5 :
                    (p6.proceed_to_level_6 ? 6 :
                    (p7.proceed_to_level_6 ? 7 :
                    (p8.proceed_to_level_6 ? 8 : last_to_enter_6))))))));

last_to_enter_7 : [-1 .. n-1] init -1;
last_to_enter_7' = p0.proceed_to_level_7 ? 0 :
                    (p1.proceed_to_level_7 ? 1 :
                    (p2.proceed_to_level_7 ? 2 :
                    (p3.proceed_to_level_7 ? 3 :
                    (p4.proceed_to_level_7 ? 4 :
                    (p5.proceed_to_level_7 ? 5 :
                    (p6.proceed_to_level_7 ? 6 :
                    (p7.proceed_to_level_7 ? 7 :
                    (p8.proceed_to_level_7 ? 8 : last_to_enter_7))))))));

last_to_enter_8 : [-1 .. n-1] init -1;
last_to_enter_8' = p0.proceed_to_level_8 ? 0 :
                    (p1.proceed_to_level_8 ? 1 :
                    (p2.proceed_to_level_8 ? 2 :
                    (p3.proceed_to_level_8 ? 3 :
                    (p4.proceed_to_level_8 ? 4 :
                    (p5.proceed_to_level_8 ? 5 :
                    (p6.proceed_to_level_8 ? 6 :
                    (p7.proceed_to_level_8 ? 7 :
                    (p8.proceed_to_level_8 ? 8 : last_to_enter_8))))))));

template process
    level : [-1 .. n-1] init -1;
    level' = proceed_to_level_0 ? 0 :
            (proceed_to_level_1 ? 1 :
            (proceed_to_level_2 ? 2 :
            (proceed_to_level_3 ? 3 :
            (proceed_to_level_4 ? 4 :
            (proceed_to_level_5 ? 5 :
            (proceed_to_level_6 ? 6 :
            (proceed_to_level_7 ? 7 :
            (proceed_to_level_8 ? 8 :
            (exit_cs ? -1 : level)))))))));

    [proceed_to_level_0] level == -1;
    [proceed_to_level_1] (level == 0) && !((last_to_enter_0 == id) && ((other.level >= level) ||
                                                                        (other1.level >= level) ||
                                                                        (other2.level >= level) ||
                                                                        (other3.level >= level) ||
                                                                        (other4.level >= level) ||
                                                                        (other5.level >= level) ||
                                                                        (other6.level >= level) ||
                                                                        (other7.level >= level)));
    [proceed_to_level_2] (level == 1) && !((last_to_enter_1 == id) && ((other.level >= level) ||
                                                                        (other1.level >= level) ||
                                                                        (other2.level >= level) ||
                                                                        (other3.level >= level) ||
                                                                        (other4.level >= level) ||
                                                                        (other5.level >= level) ||
                                                                        (other6.level >= level) ||
                                                                        (other7.level >= level)));
    [proceed_to_level_3] (level == 2) && !((last_to_enter_2 == id) && ((other.level >= level) ||
                                                                        (other1.level >= level) ||
                                                                        (other2.level >= level) ||
                                                                        (other3.level >= level) ||
                                                                        (other4.level >= level) ||
                                                                        (other5.level >= level) ||
                                                                        (other6.level >= level) ||
                                                                        (other7.level >= level)));
    [proceed_to_level_4] (level == 3) && !((last_to_enter_3 == id) && ((other.level >= level) ||
                                                                        (other1.level >= level) ||
                                                                        (other2.level >= level) ||
                                                                        (other3.level >= level) ||
                                                                        (other4.level >= level) ||
                                                                        (other5.level >= level) ||
                                                                        (other6.level >= level) ||
                                                                        (other7.level >= level)));
    [proceed_to_level_5] (level == 4) && !((last_to_enter_4 == id) && ((other.level >= level) ||
                                                                        (other1.level >= level) ||
                                                                        (other2.level >= level) ||
                                                                        (other3.level >= level) ||
                                                                        (other4.level >= level) ||
                                                                        (other5.level >= level) ||
                                                                        (other6.level >= level) ||
                                                                        (other7.level >= level)));
    [proceed_to_level_6] (level == 5) && !((last_to_enter_5 == id) && ((other.level >= level) ||
                                                                        (other1.level >= level) ||
                                                                        (other2.level >= level) ||
                                                                        (other3.level >= level) ||
                                                                        (other4.level >= level) ||
                                                                        (other5.level >= level) ||
                                                                        (other6.level >= level) ||
                                                                        (other7.level >= level)));
    [proceed_to_level_7] (level == 6) && !((last_to_enter_6 == id) && ((other.level >= level) ||
                                                                        (other1.level >= level) ||
                                                                        (other2.level >= level) ||
                                                                        (other3.level >= level) ||
                                                                        (other4.level >= level) ||
                                                                        (other5.level >= level) ||
                                                                        (other6.level >= level) ||
                                                                        (other7.level >= level)));
    [proceed_to_level_8] (level == 7) && !((last_to_enter_7 == id) &&((other.level >= level) ||
                                                                        (other1.level >= level) ||
                                                                        (other2.level >= level) ||
                                                                        (other3.level >= level) ||
                                                                        (other4.level >= level) ||
                                                                        (other5.level >= level) ||
                                                                        (other6.level >= level) ||
                                                                        (other7.level >= level)));

    [busy_loop] (((last_to_enter_0 == id) ||
                (last_to_enter_1 == id) ||
                (last_to_enter_2 == id) ||
                (last_to_enter_3 == id) ||
                (last_to_enter_4 == id) ||
                (last_to_enter_5 == id) ||
                (last_to_enter_6 == id) ||
                (last_to_enter_7 == id)) && ((other.level >= level) ||
                                            (other1.level >= level) ||
                                            (other2.level >= level) ||
                                            (other3.level >= level) ||
                                            (other4.level >= level) ||
                                            (other5.level >= level) ||
                                            (other6.level >= level) ||
                                            (other7.level >= level)));

    [exit_cs] level == (n-1);
endtemplate