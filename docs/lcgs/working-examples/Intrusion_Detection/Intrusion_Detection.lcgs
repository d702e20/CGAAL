// intrusion detection CSG model taken from


player defender = attacker_defender [attacker, 0]
player attacker = attacker_defender [defender, 1]

const MAX_ROUNDS = 100;
const MAX_SYSTEM_HEALTH = 10;
const INIT_HEALTH = 5;

rounds : [0..MAX_ROUNDS];
rounds' = max(rounds + 1, MAX_ROUNDS);

template attacker_defender
    system_state : [0..1] //0 healthy, 1 compromised
    system_state' = is_attacker ? 
                       (opposition.defend1 * attack2) + (defender.defend2 * attack1)
                     : (opposition.attack2 * defend1) + (opposition.attack1 * defend2);

    system_health : [0..MAX_SYSTEM_HEALTH] init INIT_HEALTH;
    system_health' = is_attacker ?
                        system_state + (opposition.defend1 * attack2) + (defender.defend2 * attack1)
                      : system_state + (opposition.attack2 * defend1) + (opposition.attack1 * defend2);


    [attack1] system_health > 0 & rounds < MAX_ROUNDS & is_attacker;
    [attack2] system_health > 0 & rounds < MAX_ROUNDS & is_attacker;
    [defend1] system_health > 0 & rounds < MAX_ROUNDS & !is_attacker;
    [defend2] system_health > 0 & rounds < MAX_ROUNDS & !is_attacker;

endtemplate

