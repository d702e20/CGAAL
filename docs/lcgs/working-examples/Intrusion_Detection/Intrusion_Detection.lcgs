// intrusion detection CSG model taken from


player defender = attacker_defender [opposition=attacker, is_attacker=0];
player attacker = attacker_defender [opposition=defender, is_attacker=1];

const MAX_ROUNDS = 100;
const MAX_SYSTEM_HEALTH = 10;
const INIT_HEALTH = 5;

rounds : [0..MAX_ROUNDS] init 0;
rounds' = max(rounds + 1, MAX_ROUNDS);

template attacker_defender

    system_state : [0..1] init 0; //0 healthy, 1 compromised
    system_state' =
        (is_attacker == 1) * ((opposition.defend1 * attack2) + (defender.defend2 * attack1)) +
        (is_attacker == 0) * ((opposition.attack2 * defend1) + (opposition.attack1 * defend2));


    system_health : [0..MAX_SYSTEM_HEALTH] init INIT_HEALTH;
    system_health' =
        (is_attacker == 1) * (system_state + (opposition.defend1 * attack2) + (defender.defend2 * attack1)) +
        (is_attacker == 0) * (system_state + (opposition.attack2 * defend1) + (opposition.attack1 * defend2));

    label is_compromised = (system_state == 1);
    label system_is_destroy = (system_health == 0);
    label system_is_full_health = (system_health == INIT_HEALTH);

    [wait] 1;
    [attack1] system_health > 0 && rounds < MAX_ROUNDS && is_attacker;
    [attack2] system_health > 0 && rounds < MAX_ROUNDS && is_attacker;
    [defend1] system_health > 0 && rounds < MAX_ROUNDS && !is_attacker;
    [defend2] system_health > 0 && rounds < MAX_ROUNDS && !is_attacker;
endtemplate

