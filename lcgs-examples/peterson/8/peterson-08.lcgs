// Peterson with 8 processes using filter algorithm
const n = 8;

label p0_in_cs = p0.level == (n-1);

label mutual_exclusion = (p0.level == (n-1)) +
                            (p1.level == (n-1)) +
                            (p2.level == (n-1)) +
                            (p3.level == (n-1)) +
                            (p4.level == (n-1)) +
                            (p5.level == (n-1)) +
                            (p6.level == (n-1)) +
                            (p7.level == (n-1)) <= 1;

label multiple_in_cs = ((p0.level == n-1) +
                        (p1.level == n-1) +
                        (p2.level == n-1) +
                        (p3.level == n-1) +
                        (p4.level == n-1) +
                        (p5.level == n-1) +
                        (p6.level == n-1) +
                        (p7.level == n-1)) > 1;

label process_in_deadlock = (!((p0.level == -1) ||
                            ((p0.level == 0) && !((last_to_enter_0 == 0) && p0.other_level)) ||
                            ((p0.level == 1) && !((last_to_enter_1 == 0) && p0.other_level)) ||
                            ((p0.level == 2) && !((last_to_enter_2 == 0) && p0.other_level)) ||
                            ((p0.level == 3) && !((last_to_enter_3 == 0) && p0.other_level)) ||
                            ((p0.level == 4) && !((last_to_enter_4 == 0) && p0.other_level)) ||
                            ((p0.level == 5) && !((last_to_enter_5 == 0) && p0.other_level)) ||
                            ((p0.level == 6) && !((last_to_enter_6 == 0) && p0.other_level)) ||
                            (((last_to_enter_0 == 0) ||
                                (last_to_enter_1 == 0) ||
                                (last_to_enter_2 == 0) ||
                                (last_to_enter_3 == 0) ||
                                (last_to_enter_4 == 0) ||
                                (last_to_enter_5 == 0) ||
                                (last_to_enter_6 == 0))
                                && p0.other_level) ||
                            (p0.level == n-1)))
                            ||
                            (!((p1.level == -1) ||
                            ((p1.level == 0) && !((last_to_enter_0 == 1) && p1.other_level)) ||
                            ((p1.level == 1) && !((last_to_enter_1 == 1) && p1.other_level)) ||
                            ((p1.level == 2) && !((last_to_enter_2 == 1) && p1.other_level)) ||
                            ((p1.level == 3) && !((last_to_enter_3 == 1) && p1.other_level)) ||
                            ((p1.level == 4) && !((last_to_enter_4 == 1) && p1.other_level)) ||
                            ((p1.level == 5) && !((last_to_enter_5 == 1) && p1.other_level)) ||
                            ((p1.level == 6) && !((last_to_enter_6 == 1) && p1.other_level)) ||
                            (((last_to_enter_0 == 1) ||
                                (last_to_enter_1 == 1) ||
                                (last_to_enter_2 == 1) ||
                                (last_to_enter_3 == 1) ||
                                (last_to_enter_4 == 1) ||
                                (last_to_enter_5 == 1) ||
                                (last_to_enter_6 == 1))
                                && p1.other_level) ||
                            (p1.level == n-1)))
                            ||
                            (!((p2.level == -1) ||
                            ((p2.level == 0) && !((last_to_enter_0 == 2) && p2.other_level)) ||
                            ((p2.level == 1) && !((last_to_enter_1 == 2) && p2.other_level)) ||
                            ((p2.level == 2) && !((last_to_enter_2 == 2) && p2.other_level)) ||
                            ((p2.level == 3) && !((last_to_enter_3 == 2) && p2.other_level)) ||
                            ((p2.level == 4) && !((last_to_enter_4 == 2) && p2.other_level)) ||
                            ((p2.level == 5) && !((last_to_enter_5 == 2) && p2.other_level)) ||
                            ((p2.level == 6) && !((last_to_enter_6 == 2) && p2.other_level)) ||
                            (((last_to_enter_0 == 2) ||
                                (last_to_enter_1 == 2) ||
                                (last_to_enter_2 == 2) ||
                                (last_to_enter_3 == 2) ||
                                (last_to_enter_4 == 2) ||
                                (last_to_enter_5 == 2) ||
                                (last_to_enter_6 == 2))
                                && p2.other_level) ||
                            (p2.level == n-1)))
                            ||
                            (!((p3.level == -1) ||
                            ((p3.level == 0) && !((last_to_enter_0 == 3) && p3.other_level)) ||
                            ((p3.level == 1) && !((last_to_enter_1 == 3) && p3.other_level)) ||
                            ((p3.level == 2) && !((last_to_enter_2 == 3) && p3.other_level)) ||
                            ((p3.level == 3) && !((last_to_enter_3 == 3) && p3.other_level)) ||
                            ((p3.level == 4) && !((last_to_enter_4 == 3) && p3.other_level)) ||
                            ((p3.level == 5) && !((last_to_enter_5 == 3) && p3.other_level)) ||
                            ((p3.level == 6) && !((last_to_enter_6 == 3) && p3.other_level)) ||
                            (((last_to_enter_0 == 3) ||
                                (last_to_enter_1 == 3) ||
                                (last_to_enter_2 == 3) ||
                                (last_to_enter_3 == 3) ||
                                (last_to_enter_4 == 3) ||
                                (last_to_enter_5 == 3) ||
                                (last_to_enter_6 == 3))
                                && p3.other_level) ||
                            (p3.level == n-1)))
                            ||
                            (!((p4.level == -1) ||
                            ((p4.level == 0) && !((last_to_enter_0 == 4) && p4.other_level)) ||
                            ((p4.level == 1) && !((last_to_enter_1 == 4) && p4.other_level)) ||
                            ((p4.level == 2) && !((last_to_enter_2 == 4) && p4.other_level)) ||
                            ((p4.level == 3) && !((last_to_enter_3 == 4) && p4.other_level)) ||
                            ((p4.level == 4) && !((last_to_enter_4 == 4) && p4.other_level)) ||
                            ((p4.level == 5) && !((last_to_enter_5 == 4) && p4.other_level)) ||
                            ((p4.level == 6) && !((last_to_enter_6 == 4) && p4.other_level)) ||
                            (((last_to_enter_0 == 4) ||
                                (last_to_enter_1 == 4) ||
                                (last_to_enter_2 == 4) ||
                                (last_to_enter_3 == 4) ||
                                (last_to_enter_4 == 4) ||
                                (last_to_enter_5 == 4) ||
                                (last_to_enter_6 == 4))
                                && p4.other_level) ||
                            (p4.level == n-1)))
                            ||
                            (!((p5.level == -1) ||
                            ((p5.level == 0) && !((last_to_enter_0 == 5) && p5.other_level)) ||
                            ((p5.level == 1) && !((last_to_enter_1 == 5) && p5.other_level)) ||
                            ((p5.level == 2) && !((last_to_enter_2 == 5) && p5.other_level)) ||
                            ((p5.level == 3) && !((last_to_enter_3 == 5) && p5.other_level)) ||
                            ((p5.level == 4) && !((last_to_enter_4 == 5) && p5.other_level)) ||
                            ((p5.level == 5) && !((last_to_enter_5 == 5) && p5.other_level)) ||
                            ((p5.level == 6) && !((last_to_enter_6 == 5) && p5.other_level)) ||
                            (((last_to_enter_0 == 5) ||
                                (last_to_enter_1 == 5) ||
                                (last_to_enter_2 == 5) ||
                                (last_to_enter_3 == 5) ||
                                (last_to_enter_4 == 5) ||
                                (last_to_enter_5 == 5) ||
                                (last_to_enter_6 == 5))
                                && p5.other_level) ||
                            (p5.level == n-1)))
                            ||
                            (!((p6.level == -1) ||
                            ((p6.level == 0) && !((last_to_enter_0 == 6) && p6.other_level)) ||
                            ((p6.level == 1) && !((last_to_enter_1 == 6) && p6.other_level)) ||
                            ((p6.level == 2) && !((last_to_enter_2 == 6) && p6.other_level)) ||
                            ((p6.level == 3) && !((last_to_enter_3 == 6) && p6.other_level)) ||
                            ((p6.level == 4) && !((last_to_enter_4 == 6) && p6.other_level)) ||
                            ((p6.level == 5) && !((last_to_enter_5 == 6) && p6.other_level)) ||
                            ((p6.level == 6) && !((last_to_enter_6 == 6) && p6.other_level)) ||
                            (((last_to_enter_0 == 6) ||
                                (last_to_enter_1 == 6) ||
                                (last_to_enter_2 == 6) ||
                                (last_to_enter_3 == 6) ||
                                (last_to_enter_4 == 6) ||
                                (last_to_enter_5 == 6) ||
                                (last_to_enter_6 == 6))
                                && p6.other_level) ||
                            (p6.level == n-1)))
                            ||
                            (!((p7.level == -1) ||
                            ((p7.level == 0) && !((last_to_enter_0 == 7) && p7.other_level)) ||
                            ((p7.level == 1) && !((last_to_enter_1 == 7) && p7.other_level)) ||
                            ((p7.level == 2) && !((last_to_enter_2 == 7) && p7.other_level)) ||
                            ((p7.level == 3) && !((last_to_enter_3 == 7) && p7.other_level)) ||
                            ((p7.level == 4) && !((last_to_enter_4 == 7) && p7.other_level)) ||
                            ((p7.level == 5) && !((last_to_enter_5 == 7) && p7.other_level)) ||
                            ((p7.level == 6) && !((last_to_enter_6 == 7) && p7.other_level)) ||
                            (((last_to_enter_0 == 7) ||
                                (last_to_enter_1 == 7) ||
                                (last_to_enter_2 == 7) ||
                                (last_to_enter_3 == 7) ||
                                (last_to_enter_4 == 7) ||
                                (last_to_enter_5 == 7) ||
                                (last_to_enter_6 == 7))
                                && p7.other_level) ||
                            (p7.level == n-1))) ;

label p1_requested_access = 0 <= p1.level && p1.level < n;

player p0 = process [id=0, other = p1, other1 = p2, other2 = p3, other3 = p4, other4 = p5, other5 = p6, other6 = p7];
player p1 = process [id=1, other = p0, other1 = p2, other2 = p3, other3 = p4, other4 = p5, other5 = p6, other6 = p7];
player p2 = process [id=2, other = p0, other1 = p1, other2 = p3, other3 = p4, other4 = p5, other5 = p6, other6 = p7];
player p3 = process [id=3, other = p0, other1 = p1, other2 = p2, other3 = p4, other4 = p5, other5 = p6, other6 = p7];
player p4 = process [id=4, other = p0, other1 = p1, other2 = p2, other3 = p3, other4 = p5, other5 = p6, other6 = p7];
player p5 = process [id=5, other = p0, other1 = p1, other2 = p2, other3 = p3, other4 = p4, other5 = p6, other6 = p7];
player p6 = process [id=6, other = p0, other1 = p1, other2 = p2, other3 = p3, other4 = p4, other5 = p5, other6 = p7];
player p7 = process [id=7, other = p0, other1 = p1, other2 = p2, other3 = p3, other4 = p4, other5 = p5, other6 = p6];

last_to_enter_0 : [-1 .. n-1] init -1;
last_to_enter_0' = p0.proceed_to_level_0 ? 0 :
                    (p1.proceed_to_level_0 ? 1 :
                    (p2.proceed_to_level_0 ? 2 :
                    (p3.proceed_to_level_0 ? 3 :
                    (p4.proceed_to_level_0 ? 4 :
                    (p5.proceed_to_level_0 ? 5 :
                    (p6.proceed_to_level_0 ? 6 :
                    (p7.proceed_to_level_0 ? 7 : last_to_enter_0)))))));

last_to_enter_1 : [-1 .. n-1] init -1;
last_to_enter_1' = p0.proceed_to_level_1 ? 0 :
                    (p1.proceed_to_level_1 ? 1 :
                    (p2.proceed_to_level_1 ? 2 :
                    (p3.proceed_to_level_1 ? 3 :
                    (p4.proceed_to_level_1 ? 4 :
                    (p5.proceed_to_level_1 ? 5 :
                    (p6.proceed_to_level_1 ? 6 :
                    (p7.proceed_to_level_1 ? 7 : last_to_enter_1)))))));

last_to_enter_2 : [-1 .. n-1] init -1;
last_to_enter_2' = p0.proceed_to_level_2 ? 0 :
                    (p1.proceed_to_level_2 ? 1 :
                    (p2.proceed_to_level_2 ? 2 :
                    (p3.proceed_to_level_2 ? 3 :
                    (p4.proceed_to_level_2 ? 4 :
                    (p5.proceed_to_level_2 ? 5 :
                    (p6.proceed_to_level_2 ? 6 :
                    (p7.proceed_to_level_2 ? 7 : last_to_enter_2)))))));

last_to_enter_3 : [-1 .. n-1] init -1;
last_to_enter_3' = p0.proceed_to_level_3 ? 0 :
                    (p1.proceed_to_level_3 ? 1 :
                    (p2.proceed_to_level_3 ? 2 :
                    (p3.proceed_to_level_3 ? 3 :
                    (p4.proceed_to_level_3 ? 4 :
                    (p5.proceed_to_level_3 ? 5 :
                    (p6.proceed_to_level_3 ? 6 :
                    (p7.proceed_to_level_3 ? 7 : last_to_enter_3)))))));

last_to_enter_4 : [-1 .. n-1] init -1;
last_to_enter_4' = p0.proceed_to_level_4 ? 0 :
                    (p1.proceed_to_level_4 ? 1 :
                    (p2.proceed_to_level_4 ? 2 :
                    (p3.proceed_to_level_4 ? 3 :
                    (p4.proceed_to_level_4 ? 4 :
                    (p5.proceed_to_level_4 ? 5 :
                    (p6.proceed_to_level_4 ? 6 :
                    (p7.proceed_to_level_4 ? 7 : last_to_enter_4)))))));

last_to_enter_5 : [-1 .. n-1] init -1;
last_to_enter_5' = p0.proceed_to_level_5 ? 0 :
                    (p1.proceed_to_level_5 ? 1 :
                    (p2.proceed_to_level_5 ? 2 :
                    (p3.proceed_to_level_5 ? 3 :
                    (p4.proceed_to_level_5 ? 4 :
                    (p5.proceed_to_level_5 ? 5 :
                    (p6.proceed_to_level_5 ? 6 :
                    (p7.proceed_to_level_5 ? 7 : last_to_enter_5)))))));

last_to_enter_6 : [-1 .. n-1] init -1;
last_to_enter_6' = p0.proceed_to_level_6 ? 0 :
                    (p1.proceed_to_level_6 ? 1 :
                    (p2.proceed_to_level_6 ? 2 :
                    (p3.proceed_to_level_6 ? 3 :
                    (p4.proceed_to_level_6 ? 4 :
                    (p5.proceed_to_level_6 ? 5 :
                    (p6.proceed_to_level_6 ? 6 :
                    (p7.proceed_to_level_6 ? 7 : last_to_enter_6)))))));

last_to_enter_7 : [-1 .. n-1] init -1;
last_to_enter_7' = p0.proceed_to_level_7 ? 0 :
                    (p1.proceed_to_level_7 ? 1 :
                    (p2.proceed_to_level_7 ? 2 :
                    (p3.proceed_to_level_7 ? 3 :
                    (p4.proceed_to_level_7 ? 4 :
                    (p5.proceed_to_level_7 ? 5 :
                    (p6.proceed_to_level_7 ? 6 :
                    (p7.proceed_to_level_7 ? 7 : last_to_enter_7)))))));

template process
    level : [-1 .. n-1] init -1;
    level' = proceed_to_level_0 ? 0 :
            (proceed_to_level_1 ? 1 :
            (proceed_to_level_2 ? 2 :
            (proceed_to_level_3 ? 3 :
            (proceed_to_level_4 ? 4 :
            (proceed_to_level_5 ? 5 :
            (proceed_to_level_6 ? 6 :
            (proceed_to_level_7 ? 7 :
            (exit_cs ? -1 : level))))))));

    other_level : [0 .. 1] init 0;
    other_level' = ((other.level >= level) ||
                    (other1.level >= level) ||
                    (other2.level >= level) ||
                    (other3.level >= level) ||
                    (other4.level >= level) ||
                    (other5.level >= level) ||
                    (other6.level >= level));

    [proceed_to_level_0] level == -1;
    [proceed_to_level_1] (level == 0) && !((last_to_enter_0 == id) && other_level);
    [proceed_to_level_2] (level == 1) && !((last_to_enter_1 == id) && other_level);
    [proceed_to_level_3] (level == 2) && !((last_to_enter_2 == id) && other_level);
    [proceed_to_level_4] (level == 3) && !((last_to_enter_3 == id) && other_level);
    [proceed_to_level_5] (level == 4) && !((last_to_enter_4 == id) && other_level);
    [proceed_to_level_6] (level == 5) && !((last_to_enter_5 == id) && other_level);
    [proceed_to_level_7] (level == 6) && !((last_to_enter_6 == id) && other_level);

    [busy_loop] (((last_to_enter_0 == id) ||
                (last_to_enter_1 == id) ||
                (last_to_enter_2 == id) ||
                (last_to_enter_3 == id) ||
                (last_to_enter_4 == id) ||
                (last_to_enter_5 == id) ||
                (last_to_enter_6 == id))
                && other_level);

    [exit_cs] level == (n-1);
endtemplate